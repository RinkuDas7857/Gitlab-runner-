// Code generated by mockery v1.0.0. DO NOT EDIT.

package docker

import mock "github.com/stretchr/testify/mock"

// MockVolumesManager is an autogenerated mock type for the VolumesManager type
type MockVolumesManager struct {
	mock.Mock
}

// CacheContainerIDs provides a mock function with given fields:
func (_m *MockVolumesManager) CacheContainerIDs() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// CreateBuildVolume provides a mock function with given fields: volumes
func (_m *MockVolumesManager) CreateBuildVolume(volumes []string) error {
	ret := _m.Called(volumes)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(volumes)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateUserVolumes provides a mock function with given fields: volumes
func (_m *MockVolumesManager) CreateUserVolumes(volumes []string) error {
	ret := _m.Called(volumes)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string) error); ok {
		r0 = rf(volumes)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TmpContainerIDs provides a mock function with given fields:
func (_m *MockVolumesManager) TmpContainerIDs() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// VolumeBindings provides a mock function with given fields:
func (_m *MockVolumesManager) VolumeBindings() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}
