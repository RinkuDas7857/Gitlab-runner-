trigger UBI images build:
  stage: postrelease
  extends:
  - .rules:release:stable:branch:ignore-changes
  - .rules:release:bleeding-edge
  variables:
    BUILD_RELEASE: ${CI_COMMIT_REF_NAME}
  trigger: gitlab-org/ci-cd/gitlab-runner-ubi-images

trigger runner-incept tests:
  extends:
    - .rules:merge_request_pipelines:no_docs
  needs:
    - job: "prepare runner-incept variables"
      artifacts: true
    - "binaries: [linux/386 linux/arm]"
    - "binaries: [linux/amd64 linux/arm64]"
    - "binaries: [linux/s390x linux/ppc64le]"
    - "helper images: [alpine]"
  stage: postrelease
  variables:
    UPSTREAM_CI_COMMIT_REF: $UPSTREAM_CI_COMMIT_REF
  trigger: gitlab-org/ci-cd/tests/runner-incept

static QA:
  extends:
  - .rules:merge_request_pipelines:no_docs
  - .no_cache
  stage: postrelease
  image: alpine:3.14.2
  needs:
  - code_quality
  script: |
    if [ "$(cat gl-code-quality-report.json)" != "[]" ] ; then
      apk add -U --no-cache jq > /dev/null
      jq -C . gl-code-quality-report.json
      exit 1
    fi

trigger charts update:
  stage: postrelease
  extends:
    - .rules:release:stable-or-rc
  # We can't use multi-project pipelines using `trigger` keyword
  # because master branch of Charts repos is locked only for Maintainers
  # which means others won't be able to run a pipeline there. Hence falling
  # back to the curl script using a trigger token.
  script:
    - curl --request POST \
           --form token=${GITLAB_CHARTS_TRIGGER_TOKEN} \
           --form ref=master \
           --form "variables[DEPS_PIPELINE]=true" \
           "https://gitlab.com/api/v4/projects/3828396/trigger/pipeline"
