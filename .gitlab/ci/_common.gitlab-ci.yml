variables:
  # renovate: datasource=docker depName=golang allowedVersions=/1\.18\..+/
  GO_VERSION: "1.19.6"
  CI_IMAGE: "registry.gitlab.com/gitlab-org/gitlab-runner/ci:$GO_VERSION-2"
  # Feature flags
  FF_SCRIPT_SECTIONS: "true"
  FF_USE_FASTZIP: "true"
  FF_USE_NEW_BASH_EVAL_STRATEGY: "true"
  # Following variables are used in some jobs to install specified software
  RELEASE_INDEX_GEN_VERSION: "latest"
  DOCKER_VERSION: 23.0.5
  DOCKER_MACHINE_VERSION: "v0.16.2-gitlab.21"
  BUILDX_VERSION: 0.10.4
  KUBECTL_VERSION: 1.23.0
  AWS_CLI_VERSION: 2.4.19
  DUMB_INIT_VERSION: "1.2.2"
  # Git version 2.38.x is broken for Windows Nano Server, should be resolved with 2.39 release
  # https://github.com/git-for-windows/git/issues/4052
  GIT_VERSION: "2.39.2"
  GIT_VERSION_BUILD: "1"
  GIT_LFS_VERSION: "3.3.0"
  YQ_VERSION: "4.30.5"
  LICENSE_MANAGEMENT_SETUP_CMD: echo "Skip setup. Dependency already vendored"
  DOCS_GITLAB_REPO_SUFFIX: "runner"
  # We're overriding rules for the jobs that we want to run.
  # This will disable all other rules.
  SAST_DISABLED: "true"
  DEPENDENCY_SCANNING_DISABLED: "true"
  TRANSFER_METER_FREQUENCY: "5s"
  GO111MODULE: "on"
  GO_FIPS_VERSION: "1.19"
  GO_FIPS_IMAGE: registry.gitlab.com/gitlab-org/gitlab-runner/go-fips:$GO_FIPS_VERSION
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.12\..+/
  ALPINE_312_VERSION: "3.12.12"
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.13\..+/
  ALPINE_313_VERSION: "3.13.12"
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.14\..+/
  ALPINE_314_VERSION: "3.14.10"
  # renovate: datasource=docker depName=alpine allowedVersions=/3\.15\..+/
  ALPINE_315_VERSION: "3.15.8"
  # renovate: datasource=docker depName=ubuntu allowedVersions=/20\..+/
  UBUNTU_VERSION: "20.04"
  # renovate: datasource=docker depName=redhat/ubi9-minimal versioning=redhat allowedVersions=/9\.2-.+/
  UBI_FIPS_VERSION: "9.2-484"
  UBI_FIPS_BASE_OPENSSL_VERSION: 3.0.0
  UBI_FIPS_BASE_IMAGE: registry.gitlab.com/gitlab-org/gitlab-runner/ubi-fips-base:$UBI_FIPS_VERSION

default:
  image: $CI_IMAGE
  tags:
  - gitlab-org
  retry:
    max: 2
    when:
    - runner_system_failure

.no_cache:
  cache: {}

.no_dependencies:
  dependencies: []

.no_cache_and_dependencies:
  extends:
  - .no_cache
  - .no_dependencies

.docker:
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "/certs/client"
  tags:
  - gitlab-org-docker

.docker_qemu-before_script: &docker_qemu-before_script
- docker run --privileged --rm tonistiigi/binfmt --install all

.docker_qemu:
  before_script:
  - *docker_qemu-before_script

.go-cache:
  variables:
    GOCACHE: $CI_PROJECT_DIR/.gocache-$CI_COMMIT_REF_PROTECTED
  before_script:
  - mkdir -p "$GOCACHE"
  cache:
    paths:
    - $CI_PROJECT_DIR/.gocache-false/
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"

.go-cache-docker-qemu:
  extends:
  - .go-cache
  before_script:
  - *docker_qemu-before_script
  - mkdir -p "$GOCACHE"

.go-cache-windows:
  variables:
    GOCACHE: $CI_PROJECT_DIR\.gocache-$CI_COMMIT_REF_PROTECTED
  before_script:
  - New-Item -Path "$Env:GOCACHE" -Type Directory -Force
  cache:
    paths:
    - $CI_PROJECT_DIR\.gocache-false\
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"

.linux-dependency-checksums:
  variables:
    DOCKER_MACHINE_LINUX_AMD64_CHECKSUM: "a4e9a416f30406772e76c3b9e795121d5a7e677978923f96b7fb72f0d8354740"
    DOCKER_MACHINE_LINUX_ARM64_CHECKSUM: "124ceefbe1a1eec44eeb932edf9f85dab1e532d449f5e3e236faed5e8b19caba"
    DUMB_INIT_LINUX_AMD64_CHECKSUM: "37f2c1f0372a45554f1b89924fbb134fc24c3756efaedf11e07f599494e0eff9"
    DUMB_INIT_LINUX_ARM64_CHECKSUM: "45b1bbf56cc03edda81e4220535a025bfe3ed6e93562222b9be4471005b3eeb3"
    DUMB_INIT_LINUX_S390X_CHECKSUM: "8b3808c3c06d008b8f2eeb2789c7c99e0450b678d94fb50fd446b8f6a22e3a9d"
    DUMB_INIT_LINUX_PPC64LE_CHECKSUM: "88b02a3bd014e4c30d8d54389597adc4f5a36d1d6b49200b5a4f6a71026c2246"
    GIT_LFS_LINUX_AMD64_CHECKSUM: "6a4e6bd7d06d5c024bc70c8ee8c9da143ffc37d2646e252a17a6126d30cdebc1"
    GIT_LFS_LINUX_ARM64_CHECKSUM: "e97c477981a9b6a40026cadc1bf005541d973fc32df2de2f398643b15df6b5c6"
    GIT_LFS_LINUX_S390X_CHECKSUM: "266e0efd3c790003bbbf31156d471e832b9fb27dda6968e56aca2a669d01e245"
    GIT_LFS_LINUX_PPC64LE_CHECKSUM: "32a22e5496a8c8028e5c8193fd5941a0acae800d65296f09901237f1e2146a79"

.windows-dependency-checksums:
  variables:
    GIT_WINDOWS_AMD64_CHECKSUM: "a53b90a42d9a5e3ac992f525b5805c4dbb8a013b09a32edfdcf9a551fd8cfe2d"
    GIT_LFS_WINDOWS_AMD64_CHECKSUM: "1df5874f22c35c679159f0aaf9e24333051f52768eade0204d22200b79141743"
    PWSH_WINDOWS_AMD64_CHECKSUM: "D234CFD6E9DD4A2CA68BFBC64C416DE42F31760E954812E8ADE02B6D57FE243F"

.windows1809_variables:
  variables:
    WINDOWS_VERSION: servercore1809

.windows1809:
  extends:
  - .windows1809_variables
  tags:
  - shared-windows
  - windows
  - windows-1809

.windows1809_nano:
  extends:
  - .windows1809
  variables:
    WINDOWS_VERSION: nanoserver1809

.windows21H2_variables:
  variables:
    WINDOWS_VERSION: servercore21H2

.windows21H2:
  extends:
  - .windows21H2_variables
  tags:
  - windows
  - windows-21h1 # todo: use windows-2022 when ready (https://gitlab.com/gitlab-org/ci-cd/shared-runners/infrastructure/-/issues/61)

.windows21H2_nano:
  extends:
  - .windows21H2
  variables:
    WINDOWS_VERSION: nanoserver21H2

# .stage_done is used as a sentinel at stage n for stage n-1 completion, so we can kick off builds in later stages
# without explicitly waiting for the completion of the n-1 stage
.stage_done:
  extends:
  - .no_cache_and_dependencies
  - .rules:merge_request_pipelines
  image: alpine:latest
  variables:
    GIT_STRATEGY: none
  script:
  - exit 0
