include:
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Coverage-Fuzzing.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Security/License-Scanning.gitlab-ci.yml

# Overriding 'Dependency-Scanning.gitlab-ci.yml' template, because
# we need to replace the rules with our own, the same
# as in `.merge_request_pipelines` template.
gemnasium-dependency_scanning:
  rules: !reference [".rules:merge_request_pipelines:no_docs", rules]

# Overriding 'License-Scanning.gitlab-ci.yml' template, because
# we need to replace the rules with our own, the same
# as in `.merge_request_pipelines` template.
license_scanning:
  variables:
    LICENSE_FINDER_CLI_OPTS: '--decisions-file=.gitlab/dependency_decisions.yml'
  rules: !reference [".rules:merge_request_pipelines:no_docs", rules]

# Overriding 'SAST.gitlab-ci.yml' template, because
# we need to replace the rules with our own, the same
# as in `.merge_request_pipelines` template.
gosec-sast:
  rules: !reference [".rules:merge_request_pipelines:no_docs", rules]

check version definition:
  stage: test
  extends:
  - .rules:merge_request_pipelines
  needs: []
  script:
  - grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' VERSION

# Perform documentation linting on Markdown files
docs lint markdown:
  image: registry.gitlab.com/gitlab-org/gitlab-docs/lint-markdown:alpine-3.16-vale-2.20.2-markdownlint-0.32.2-markdownlint2-0.5.1
  stage: test
  extends:
  - .rules:merge_request_pipelines
  - .no_cache_and_dependencies
  needs: []
  script:
  # Lint prose and Markdown
  - make lint-docs VALE_MIN_ALERT_LEVEL=error

# Perform link checks on published HTML files
docs check links:
  image: registry.gitlab.com/gitlab-org/gitlab-docs/lint-html:alpine-3.16-ruby-2.7.6-0088e238
  stage: test
  extends:
  - .rules:merge_request_pipelines
  - .no_cache_and_dependencies
  needs: []
  script:
  # Prepare docs for build
  - mv docs/ /tmp/gitlab-docs/content/$DOCS_GITLAB_REPO_SUFFIX
  - cd /tmp/gitlab-docs
  # Build HTML from Markdown
  - bundle exec nanoc
  # Check the internal links
  - bundle exec nanoc check internal_links
  # Check the internal anchor links
  - bundle exec nanoc check internal_anchors

check feature flags docs:
  stage: test
  extends:
  - .rules:merge_request_pipelines
  - .no_cache_and_dependencies
  script:
  - cp docs/configuration/feature-flags.md docs/configuration/feature-flags.md.orig
  - make update_feature_flags_docs
  - |
    diff docs/configuration/feature-flags.md.orig docs/configuration/feature-flags.md || (
      echo
      echo "Feature Flags list in documentation is not up-to-date"
      echo "Run 'make update_feature_flags_docs' to update it"
      echo
      exit 1
    )

check modules:
  stage: test
  extends:
  - .rules:merge_request_pipelines:no_docs
  - .no_cache_and_dependencies
  needs:
  - 'prepare done'
  script:
  - make check_modules

check mocks:
  stage: test
  extends:
  - .rules:merge_request_pipelines:no_docs
  - .no_cache_and_dependencies
  needs:
  - 'prepare done'
  script:
  - make check_mocks

check test directives:
  stage: test
  extends:
  - .rules:merge_request_pipelines:no_docs
  - .no_cache_and_dependencies
  needs:
  - 'prepare done'
  script:
  - make check_test_directives

.check windows test ignore list:
  stage: test
  extends:
  - .rules:merge_request_pipelines:no_docs
  script:
  - ./scripts/check_windows_test_ignore_list
  needs:
  - 'prepare done'
  - 'unit test definitions'
  - 'integration test definitions'

check windows 1809 test ignore list:
  extends:
  - .check windows test ignore list
  - .windows1809_variables

check windows 2004 test ignore list:
  extends:
  - .check windows test ignore list
  - .windows2004_variables

.windows unit test: #need
  extends:
  - .windows test
  needs:
  - 'unit test definitions'
  - 'clone test repo'
  - 'prepare done'
  variables:
    TESTFLAGS: '-tags=!integration'
    TESTSDEFINITIONSPATH: unit\testsdefinitions.txt

.windows integration test:
  extends:
  - .windows test
  variables:
    TESTFLAGS: '-tags=integration'
    TESTSDEFINITIONSPATH: integration\testsdefinitions.txt

# Only test the oldest supported version in merge requests,
# but test all versions in the default branch.
windows 1809 unit tests: #need
  extends:
  - .windows unit test
  - .windows1809
  - .rules:merge_request_pipelines:no_docs

windows 21H1 unit tests:
  extends:
  - .windows unit test
  - .windows21H1
  - .rules:merge_request_pipelines:no_docs:no-community-mr

windows 1809 integration tests: #need
  extends:
  - .windows integration test
  - .windows1809
  - .rules:merge_request_pipelines:no_docs
  needs:
  - 'integration test definitions'
  - 'clone test repo'
  - 'prepare done'
  - job: 'development servercore1809 helper docker images'
    optional: true
  - job: 'bleeding edge servercore1809 helper docker images'
    optional: true
  - job: 'stable servercore1809 helper docker images'
    optional: true

windows 21H1 integration tests:
  extends:
  - .windows integration test
  - .windows21H1
  - .rules:merge_request_pipelines:no_docs:no-community-mr
  needs:
  - 'integration test definitions'
  - 'clone test repo'
  - 'prepare done'
  - job: 'development servercore21H1 helper docker images'
    optional: true
  - job: 'bleeding edge servercore21H1 helper docker images'
    optional: true
  - job: 'stable servercore21H1 helper docker images'
    optional: true

