// Code generated by mockery v1.0.0

// This comment works around https://github.com/vektra/mockery/issues/155

package network

import io "io"
import mock "github.com/stretchr/testify/mock"

// MockArtifactsClient is an autogenerated mock type for the ArtifactsClient type
type MockArtifactsClient struct {
	mock.Mock
}

// DownloadArtifacts provides a mock function with given fields: config, artifactsFile
func (_m *MockArtifactsClient) DownloadArtifacts(config JobCredentials, artifactsFile string) DownloadState {
	ret := _m.Called(config, artifactsFile)

	var r0 DownloadState
	if rf, ok := ret.Get(0).(func(JobCredentials, string) DownloadState); ok {
		r0 = rf(config, artifactsFile)
	} else {
		r0 = ret.Get(0).(DownloadState)
	}

	return r0
}

// UploadArtifacts provides a mock function with given fields: config, artifactsFile
func (_m *MockArtifactsClient) UploadArtifacts(config JobCredentials, artifactsFile string) UploadState {
	ret := _m.Called(config, artifactsFile)

	var r0 UploadState
	if rf, ok := ret.Get(0).(func(JobCredentials, string) UploadState); ok {
		r0 = rf(config, artifactsFile)
	} else {
		r0 = ret.Get(0).(UploadState)
	}

	return r0
}

// UploadRawArtifacts provides a mock function with given fields: config, reader, baseName, expireIn
func (_m *MockArtifactsClient) UploadRawArtifacts(config JobCredentials, reader io.Reader, baseName string, expireIn string) UploadState {
	ret := _m.Called(config, reader, baseName, expireIn)

	var r0 UploadState
	if rf, ok := ret.Get(0).(func(JobCredentials, io.Reader, string, string) UploadState); ok {
		r0 = rf(config, reader, baseName, expireIn)
	} else {
		r0 = ret.Get(0).(UploadState)
	}

	return r0
}
