#!/usr/bin/env bash

set -o pipefail

GIT_ROOT=$(cd "${BASH_SOURCE%/*}" && git rev-parse --show-toplevel)
VALE_MIN_ALERT_LEVEL=${VALE_MIN_ALERT_LEVEL:-}
ERROR_RESULTS=0

echo "Lint prose" >/dev/stderr
if command -v vale >/dev/null 2>&1; then
    args=()
    if [ -n "${VALE_MIN_ALERT_LEVEL}" ]; then
        args+=("--minAlertLevel" "${VALE_MIN_ALERT_LEVEL}")
    fi
    vale --config "${GIT_ROOT}/.vale.ini" "${args[@]}" "${GIT_ROOT}/docs" || ((ERROR_RESULTS++))
else
    echo "✖ WARNING: vale is missing" >/dev/stderr
    echo "           Please install it from https://errata-ai.gitbook.io/vale/#installation" >/dev/stderr
fi

echo "Lint Markdown" >/dev/stderr
if command -v markdownlint >/dev/null 2>&1; then
    markdownlint --config "${GIT_ROOT}/.markdownlint.json" 'docs/**/*.md' || ((ERROR_RESULTS++))
else
    echo "✖ WARNING: markdownlint is missing" >/dev/stderr
    echo "           Please install it from https://github.com/igorshubovych/markdownlint-cli#installation" >/dev/stderr
fi

if [ "${ERROR_RESULTS}" -ne 0 ]; then
    echo "✖ ${ERROR_RESULTS} lint test(s) failed. Review the log carefully to see full listing." >/dev/stderr
    exit 1
else
    echo "✔ Linting passed" >/dev/stderr
    exit 0
fi
